package com.app.User;
// Generated 29 Nov, 2018 1:33:50 PM by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.app.Center.Center;
import com.app.Challan.Challan;
import com.app.Role.Roles;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "bdm", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class User implements java.io.Serializable {

	private Integer id;
	@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id",scope = Center.class)
	@JsonIdentityReference(alwaysAsId=true)
	private Center center;
	@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id",scope = Roles.class)
	@JsonIdentityReference(alwaysAsId=true)
	private Roles roles;
	private String name;
	private String counceller;
	private String email;
	private String mob;
	private String username ;
	private String pwd;
	@JsonIgnore
	private Set<Challan> challansForIssuedTo = new HashSet<Challan>(0);
	@JsonIgnore
	private Set<Challan> challansForIssuedBy = new HashSet<Challan>(0);

	public User() {
	}

	public User(String name, String uname) {
		this.name = name;
		this.username  = uname;
	}

	public User(Center center, Roles roles, String name, String counceller, String email, String mob, String uname,
			String pwd, Set<Challan> challansForIssuedTo, Set<Challan> challansForIssuedBy) {
		this.center = center;
		this.roles = roles;
		this.name = name;
		this.counceller = counceller;
		this.email = email;
		this.mob = mob;
		this.username  = uname;
		this.pwd = pwd;
		this.challansForIssuedTo = challansForIssuedTo;
		this.challansForIssuedBy = challansForIssuedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "center")
	public Center getCenter() {
		return this.center;
	}

	public void setCenter(Center center) {
		this.center = center;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role")
	public Roles getRoles() {
		return this.roles;
	}

	public void setRoles(Roles roles) {
		this.roles = roles;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "counceller", length = 100)
	public String getCounceller() {
		return this.counceller;
	}

	public void setCounceller(String counceller) {
		this.counceller = counceller;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "mob", length = 45)
	public String getMob() {
		return this.mob;
	}

	public void setMob(String mob) {
		this.mob = mob;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username ;
	}

	public void setUsername(String username ) {
		this.username  = username ;
	}

	@Column(name = "pwd", length = 500)
	public String getPwd() {
		return this.pwd;
	}

	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByIssuedTo")
	public Set<Challan> getChallansForIssuedTo() {
		return this.challansForIssuedTo;
	}

	public void setChallansForIssuedTo(Set<Challan> challansForIssuedTo) {
		this.challansForIssuedTo = challansForIssuedTo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByIssuedBy")
	public Set<Challan> getChallansForIssuedBy() {
		return this.challansForIssuedBy;
	}

	public void setChallansForIssuedBy(Set<Challan> challansForIssuedBy) {
		this.challansForIssuedBy = challansForIssuedBy;
	}


}

package com.app.Book;
// Generated 29 Nov, 2018 1:33:50 PM by Hibernate Tools 5.2.10.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.app.BookName.BookName;
import com.app.CbDetails.CbDetails;
import com.app.Inventry.Inventry;
import com.app.Languages.Languages;
import com.app.Type.Type;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIdentityReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "bdm")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Book implements java.io.Serializable {

	private Integer id;
	@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id",scope = Languages.class)
	@JsonIdentityReference(alwaysAsId=true)
	private Languages languages;
	@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id",scope = Type.class)
	@JsonIdentityReference(alwaysAsId=true)
	private Type type;
	@JsonIdentityInfo(generator=ObjectIdGenerators.PropertyGenerator.class, property="id",scope = BookName.class)
	@JsonIdentityReference(alwaysAsId=true)
	private BookName name;
	private int price;
	@JsonIgnore
	private Set<CbDetails> cbDetailses = new HashSet<CbDetails>(0);
	@JsonIgnore
	private Set<Inventry> inventries = new HashSet<Inventry>(0);

	public Book() {
	}

	public Book(Languages languages, Type type, BookName name, int price) {
		this.languages = languages;
		this.type = type;
		this.name = name;
		this.price = price;
	}

	public Book(Languages languages, Type type, BookName name, int price, Set<CbDetails> cbDetailses,
			Set<Inventry> inventries) {
		this.languages = languages;
		this.type = type;
		this.name = name;
		this.price = price;
		this.cbDetailses = cbDetailses;
		this.inventries = inventries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lang", nullable = false)
	public Languages getLanguages() {
		return this.languages;
	}

	public void setLanguages(Languages languages) {
		this.languages = languages;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type", nullable = false)
	public Type getType() {
		return this.type;
	}

	public void setType(Type type) {
		this.type = type;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "name", nullable = false)
	public BookName getName() {
		return this.name;
	}

	public void setName(BookName name) {
		this.name = name;
	}

	@Column(name = "price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<CbDetails> getCbDetailses() {
		return this.cbDetailses;
	}

	public void setCbDetailses(Set<CbDetails> cbDetailses) {
		this.cbDetailses = cbDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<Inventry> getInventries() {
		return this.inventries;
	}

	public void setInventries(Set<Inventry> inventries) {
		this.inventries = inventries;
	}

}
